#!/usr/bin/env bash
#
#
# cfetch - A minimal system information tool for Linux-based operating systems.
#
# Copyright (c) 2020 - 2021 Clint <https://github.com/kluntze>
# This programme is provided under the GPL-3.0 License. See LICENSE for more details.







usage() {
# This will display cfetch's usage information.
whiptail --title "cfetch" --msgbox "Usage: cfetch --option

cfetch is a simple system information tool for Linux. cfetch shows the OS' name and architecture, kernel release name, computer's modelname and version, CPU's core and name, number of packages installed, shell's name, total RAM size and total RAM used, and the sytem's uptime.

CONFIGURATION:
    sudo make install                   To install cfetch.
    cfetch                              To run cfetch.
    sudo make uninstall                 To uninstall cfetch.

OPTIONS:
    cfetch --help                       Display help information.
    cfetch --version                    Display cfetch version.

For bugs report, go to https://github.com/kluntze/cfetch/issues

Copyright (c) 2020 - 2021 Clint <https://github.com/kluntze>
This programme is provided under the GPL-3.0 License. See LICENSE for more details.

Thanks to cfetch contributors â™¥ <https://github.com/kluntze/cfetch/graphs/contributors>" 28 100
}


get_user() {
    # Get the username and hostname using the 'whoami'and 'hostname' command.
    user="$(whoami)@$(hostname)"
}


get_os() {
    # Get the distro name and system architecture.
    if [ $(command  -v lsb_release) ]; then
        distro="$(lsb_release -ds)"
    else
        distro="$(grep -i 'PRETTY_NAME=' /etc/*-release | cut -d '\"' -f2)"
    fi
}


get_kernel() {
    # Get the kernel release information using the 'uname -r' command. This will
    # get the kernel that the  distro is using.
    kernel="$(uname -mr)"
}


get_model() {
    # Get the system's model name and product version by reading the
    # '/sys/devices/virtual/dmi/id/product_name' and
    # '/sys/devices/virtual/dmi/id/product_version'.
    model="$(< /sys/devices/virtual/dmi/id/product_name) "
    model+="$(< /sys/devices/virtual/dmi/id/product_version)"
}


get_cpu() {
    # Get the CPU's model name by using search the '/proc/cpuinfo' for 'model name'
    # and the number of cores in the CPU by using the 'nproc' commands.
    cpu="$(grep -i 'model name' /proc/cpuinfo | head -1 | cut -f3- -d' ')"
    core="$(nproc)"
    cpu+=" @ ${core}"
}


get_shell() {
    # Get the nme of the shell that is currently in use.
    shell="$(basename $SHELL)"
}


get_ram() {
    # Get the available RAM and the total RAM by looking at the /proc/meminfo'.
    # Subtract the 'ramtotal' and 'ramused' to get the size of RAM in use. By
    # default this will display the RAM information in kilobytes, so 'ramused'
    # and 'ramtotal' to 1024 to translate it into mebibytes.
    ramused="$(grep -i MemAvailable /proc/meminfo | awk '{print $2}')"
    ramtotal="$(grep -i MemTotal /proc/meminfo | awk '{print $2}')"

    # Subtract 'ramtotal' to 'ramused' to get the value of RAM that is used.
    ramused=$((ramtotal-ramused))

    # Divide 'ramused' and 'ramtotal' to 1024 to convert it into mebibytes (MiB).
    ((ramused /= 1024))
    ((ramtotal /= 1024))

    ram="${ramused} MiB / ${ramtotal} MiB"
}


get_pkgs() {
    # Get the number of packages installed in the user's system. This will look
    # for the distro's package manager, if the package manager is found, then the
    # number of packages installed in the system will be displayed. To print the
    # number of packages installed, 'wc -l'.

    # Detect apk packages installed.
    if [ -x "$(command -v apk)" ]; then
        pkgs="$(apk list --installed | wc -l)"
        pkgs+="(apk) "
    fi
    # Detect apt packages installed.
    if [ -x "$(command -v apt)" ]; then
        pkgs="$(dpkg-query -f '${binary:Package}\n' -W | wc -l)"
        pkgs+="(apt) "
    fi
    # Detect dnf packages installed.
    if [ -x "$(command -v dnf)" ]; then
        pkgs="$(dnf list installed | wc -l)"
        pkgs+="(dnf) "
    fi
    # Detect emerge packages installed.
    if [ -x "$(command -v emerge)" ]; then
        pkgs="$(qlist -I | wc -l)"
        pkgs+="(emerge) "
    fi
    # Detect kiss packages installed.
    if [ -x "$(command -v kiss)" ]; then
        pkgs="$(kiss list | wc -l)"
        pkgs+="(kiss) "
    fi
    # Detect snap packages installed.
    if [ -x "$(command -v nix)" ]; then
        pkgs="$(nix-store -q --requisites /run/current-system/sw | wc -l)"
        pkgs+="(nix) "
    fi
    # Detect opkg packages installed.
    if [ -x "$(command -v opkg)" ]; then
        pkgs="$(opkg list-installed  | wc -l)"
        pkgs+="(opkg) "
    fi
    # Detect pacman packages installed.
    if [ -x "$(command -v pacman)" ]; then
        pkgs="$(pacman -Q | wc -l)"
        pkgs+="(pacman) "
    fi
    # Detect rpm packages installed.
    if [ -x "$(command -v rpm)" ]; then
        pkgs="$(rpm -qa --last | wc -l)"
        pkgs+="(rpm) "
    fi
    # Detect xbps packages installed.
    if [ -x "$(command -v xbps)" ]; then
        pkgs="$(xbps-query -l | wc -l)"
        pkgs+="(xbps) "
    fi
    # Detect yay packages installed.
    if [ -x "$(command -v yay)" ]; then
        pkgs="$(yay -Q | wc -l)"
        pkgs+="(yay) "
    fi
    # Detect yum packages installed.
    if [ -x "$(command -v yum)" ]; then
        pkgs="$(yum list installed | wc -l)"
        pkgs+="(yum) "
    fi
    # Detect zypper packages installed.
    if [ -x "$(command -v zypper)" ]; then
        pkgs="$(zypper se | wc -l)"
        pkgs+="(zypper) "
    fi
    # Detect flatpak packages installed.
    if [ -x "$(command -v flatpak)" ]; then
        pkgs+="$(flatpak list | wc -l)"
        pkgs+="(flatpak) "
    fi
    # Detect snap packages installed.
    if [ -x "$(command -v snap)" ]; then
        pkgs+="$(snap list | wc -l)"
        pkgs+="(snap) "
    fi
}


get_uptime() {
    # Get the system's uptime. Retrieve data in seconds then convert that data
    # into days, hours, and minutes.
    IFS=. read -r sec _ < /proc/uptime

    # Convert uptime from seconds into days, hours, and minutes.
    day=$((sec / 60 / 60 / 24))
    hour=$((sec / 60 / 60 % 24))
    min=$((sec / 60 % 60))

    # Exclude days, hours, and min if they're equal to zero.
    case $day in (0*) uptime="${hour}h ${min}m";; esac
    case $hour in (0*) uptime="${day}d ${min}m";; esac
    case $min in (0*) uptime="${day}d ${hour}h";; esac
}


{
    # Call all the functions.
    get_user
    get_os
    get_kernel
    get_model
    get_cpu
    get_shell
    get_pkgs
    get_ram
    get_uptime

}


fetch() {
    # Print system information. This will print the OS' name and architecture,
    # kernel release name, computer's modelname and version, CPU's core and
    # name, number of packages installed, shell's name, total RAM size and total
    # RAM used, and the sytem's uptime.

    case $distro in
        "Alpine"*) #Alpine
            whiptail --title "cfetch" --msgbox "
                                  $user
                    /\\            OS     $distro
                   /  \\           KERNEL $kernel
                  / /\\ \\  /\\      MODEL  $model
                 / /  \\ \\/  \\     CPU    $cpu
                / /    \\ \\/\\ \\    RAM    $ram
               / / /|   \\ \\ \\ \\   SHELL  $shell
              /_/ /_|    \\_\\ \\_\\  PKGS   $pkgs
                                  UPTIME $uptime
            " 18 100
        ;;
        "ArchBang"*) # ArchBang
            whiptail --title "cfetch" --msgbox "
                                $user
                    /\\          OS     $distro
                   / _\\         KERNEL $kernel
                  /  \\ /        MODEL  $model
                 /   // \\       CPU    $cpu
                /   //   \\      RAM    $ram
               / ___()___ \\     SHELL  $shell
              /.\\\`        \\\`.\\  PKGS   $pkgs
                                UPTIME $uptime
            " 18 100
        ;;
        "ArchLabs"*) # ArchLabs
            whiptail --title "cfetch" --msgbox "
                              $user
                    /\\        OS     $distro
                   /  \\       KERNEL $kernel
                  / /\\ \\      MODEL  $model
                 / //\\\\ \\     CPU    $cpu
                / //  \\\\ \\    RAM    $ram
               / _\\\\  //_ \\   SHELL  $shell
              /.\\    /   /.\\  PKGS   $pkgs
                              UPTIME $uptime
            " 18 100
        ;;
        "Arch"*) # Arch
            whiptail --title "cfetch" --msgbox "
                              $user
                    /\\        OS     $distro
                   /  \\       KERNEL $kernel
                  /\\   \\      MODEL  $model
                 /  __  \\     CPU    $cpu
                /  (  )  \\    RAM    $ram
               / __|  |__ \\   SHELL  $shell
              /.\\\`      \\\`.\\  PKGS   $pkgs
                              UPTIME $uptime
            " 18 100
        ;;
        "Arco"*) # Arco
            whiptail --title "cfetch" --msgbox "
                              $user
                    /\\        OS     $distro
                   /  \\       KERNEL $kernel
                  / /\\ \\      MODEL  $model
                 / /  \\ \\     CPU    $cpu
                / /    \\ \\    RAM    $ram
               / / -----\\ \\   SHELL  $shell
              /_/  \`\`\`\`-.\\_\\  PKGS   $pkgs
                              UPTIME $uptime
            " 18 100
        ;;
        "Artix"*) # Artix
            whiptail --title "cfetch" --msgbox "
                                $user
                    /\\          OS     $distro
                   /  \\         KERNEL $kernel
                  /\\\`'.,\\       MODEL  $model
                 /     ',       CPU    $cpu
                /      ,\\\`\\     RAM    $ram
               /   ,.'\\\`.  \\    SHELL  $shell
              /.,'\\\`     \\\`'.\\  PKGS   $pkgs
                                UPTIME $uptime
            " 18 100
        ;;
        "Cent"*) # Cent
            whiptail --title "cfetch" --msgbox "
                           $user
               ____^____   OS     $distro
               |\\  |  /|   KERNEL $kernel
               | \\ | / |   MODEL  $model
              <---- ---->  CPU    $cpu
               | / | \\ |   RAM    $ram
               |/__|__\\|   SHELL  $shell
                   v       PKGS   $pkgs
                           UPTIME $uptime
            " 18 100
        ;;
        "Debian"*) # Debian
            whiptail --title "cfetch" --msgbox "
                            $user
                 ,---._     OS     $distro
               /\\\`  __ \\\\   KERNEL $kernel
              |   /    |    MODEL  $model
              |   \\\`.__.\\\`  CPU    $cpu
               \\            RAM    $ram
                \\\`-,_       SHELL  $shell
                            PKGS   $pkgs
                            UPTIME $uptime
            " 18 100
        ;;
        "Devuan"*) # Devuan
            whiptail --title "cfetch" --msgbox "
                               $user
              -.,              OS     $distro
                 \\\`'-.,        KERNEL $kernel
                      \\\`':.    MODEL  $model
                         ::    CPU    $cpu
                    __--\\\`:\\\`  RAM    $ram
               _,--\\\` _.-\\\`    SHELL  $shell
              :_,--\\\`\\\`        PKGS   $pkgs
                               UPTIME $uptime
            " 18 100
        ;;
        "elementary"*) # elementary
            whiptail --title "cfetch" --msgbox "
                           $user
                _______    OS     $distro
               /  ___  \\   KERNEL $kernel
              /  |  /  /\\  MODEL  $model
              |__\\ /  / |  CPU    $cpu
              \\   /__/  /  RAM    $ram
               \\_______/   SHELL  $shell
                           PKGS   $pkgs
                           UPTIME $uptime
            " 18 100
        ;;
        "Fedora"*) # Fedora
            whiptail --title "cfetch" --msgbox "
                               $user
                    _____      OS     $distro
                   /   __)\\    KERNEL $kernel
                   |  /  \\ \\   MODEL  $model
                ___|  |__/ /   CPU    $cpu
               / (_    _)_/    RAM    $ram
              / /  |  |        SHELL  $shell
              \\ \\__/  |        PKGS   $pkgs
               \\(_____/        UPTIME $uptime
            " 18 100
        ;;
        "Gentoo"*) # Gentoo
            whiptail --title "cfetch" --msgbox "
                              $user
                .-----.       OS     $distro
              .\\\`    _  \\\`.   KERNEL $kernel
              \\\`.   ()   \\\`.  MODEL  $model
                \\\`.        /  CPU    $cpu
               .\\\`       .\\\`  RAM    $ram
              /       .\\\`     SHELL  $shell
              \\____.-\\\`       PKGS   $pkgs
                              UPTIME $uptime
            " 18 100
        ;;
        "gNewSense"*) # gNewSense
            whiptail --title "cfetch" --msgbox "
                                  $user
                 ________         OS     $distro
               .\\\`__.---.__\\\`.    KERNEL $kernel
              / /  |  *|  \\ \\     MODEL  $model
              | |  \\___/  | |     CPU    $cpu
              \\ \\         / /     RAM    $ram
               \\\`.\\\`       \\\`.\\\`  SHELL  $shell
                                  PKGS   $pkgs
                                  UPTIME $uptime
            " 18 100
        ;;
        "Guix"*) # Guix
            whiptail --title "cfetch" --msgbox "
                                  $user
              |.__          __.|  OS     $distro
              |__ \\        / __|  KERNEL $kernel
                 \\ \\      / /     MODEL  $model
                  \\ \\    / /      CPU    $cpu
                   \\ \\  / /       RAM    $ram
                    \\ \\/ /        SHELL  $shell
                     \\__/         PKGS   $pkgs
                                  UPTIME $uptime
            " 18 100
        ;;
        "Hyperbola"*) # Hyperbola
            whiptail --title "cfetch" --msgbox "
                              $user
                  |\\\`__.\\\`/   OS     $distro
                  \\____/      KERNEL $kernel
                  .--.        MODEL  $model
                 /    \\       CPU    $cpu
                /  ___ \\      RAM    $ram
               / .\\\`   \\\`.\\   SHELL  $shell
              /.\\\`      \\\`.\\  PKGS   $pkgs
                              UPTIME $uptime
            " 18 100
        ;;
        "instant"*) # instant
            whiptail --title "cfetch" --msgbox "
                             $user
               ,-''-,        OS     $distro
              : .''. :       KERNEL $kernel
              : ',,' :       MODEL  $model
               '-____:__     CPU    $cpu
                     :  \\\`.  RAM    $ram
                     \\\`._.'  SHELL  $shell
                             PKGS   $pkgs
                             UPTIME $uptime
            " 18 100
        ;;
        ("KDE"* | "neon"* | [Kk][Dd][Ee]* | [Nn]eon*) # neon
            whiptail --title "cfetch" --msgbox "
                           $user
                .__.__.    OS     $distro
               /  _._  \\   KERNEL $kernel
              /  /   \\  \\  MODEL  $model
              . |  O  | .  CPU    $cpu
              \\  \\_._/  /  RAM    $ram
               \\.__.__./   SHELL  $shell
                           PKGS   $pkgs
                           UPTIME $uptime
            " 18 100
        ;;
        "Lite"*) # Lite
            whiptail --title "cfetch" --msgbox "
                      $user
                 /\\   OS     $distro
                /  \\  KERNEL $kernel
               / / /  MODEL  $model
              > / /   CPU    $cpu
              \\ \\ \\   RAM    $ram
               \\_\\_\\  SHELL  $shell
                  \\   PKGS   $pkgs
                      UPTIME $uptime
            " 18 100
        ;;
        "Mint"* | "LMDE"*) # Mint & LMDE
            whiptail --title "cfetch" --msgbox "
                               $user
               _____________   OS     $distro
              |_            \\  KERNEL $kernel
                |  |  ___   |  MODEL  $model
                |  | | | |  |  CPU    $cpu
                |  | | | |  |  RAM    $ram
                |   \\____/  |  SHELL  $shell
                \\__________/   PKGS   $pkgs
                               UPTIME $uptime
            " 18 100
        ;;
        "Mageia"*) # Mageia
            whiptail --title "cfetch" --msgbox "
                        $user
                 *      OS     $distro
                  *     KERNEL $kernel
                 **     MODEL  $model
               /\\__/\\   CPU    $cpu
              /      \\  RAM    $ram
              \\      /  SHELL  $shell
               \\____/   PKGS   $pkgs
                        UPTIME $uptime
            " 18 100
        ;;
        "Manjaro"*) # Manjaro
            whiptail --title "cfetch" --msgbox "
                              $user
              ||||||||| ||||  OS     $distro
              ||||||||| ||||  KERNEL $kernel
              ||||      ||||  MODEL  $model
              |||| |||| ||||  CPU    $cpu
              |||| |||| ||||  RAM    $ram
              |||| |||| ||||  SHELL  $shell
              |||| |||| ||||  PKGS   $pkgs
                              UPTIME $uptime
            " 18 100
        ;;
        "MX"*) # MX
            whiptail --title "cfetch" --msgbox "
                            $user
                  \\\\  /     OS     $distro
                   \\\\/      KERNEL $kernel
                    \\\\      MODEL  $model
                 /\\/ \\\\     CPU    $cpu
                /  \\  /\\    RAM    $ram
               /    \\/  \\   SHELL  $shell
              /__________\\  PKGS   $pkgs
                            UPTIME $uptime
            " 18 100
        ;;
        "Nix"*) # Nix
            whiptail --title "cfetch" --msgbox "
                              $user
                \\   \\ //      OS     $distro
               ==\\___\\/ //    KERNEL $kernel
                 //    \\//    MODEL  $model
              ==//      //==  CPU    $cpu
               //\\____//      RAM    $ram
              // /\\   \\==     SHELL  $shell
                // \\   \\      PKGS   $pkgs
                              UPTIME $uptime
            " 18 100
        ;;
        "Wrt"*) # OpenWrt
            whiptail --title "cfetch" --msgbox "
                            $user
                            OS     $distro
                _______     KERNEL $kernel
             .-- _____ --.  MODEL  $model
              .-- ___ --.   CPU    $cpu
               .-- _ --.    RAM    $ram
                .-- --.     SHELL  $shell
                   0        PKGS   $pkgs
                            UPTIME $uptime
            " 18 100
        ;;
        "Parabola"*) # Parabola
            whiptail --title "cfetch" --msgbox "
                                 $user
                __ __ __  _      OS      $distro
              .\\\`_//_//_/ / \\\`.  KERNEL $kernel
                        /  .\\\`   MODEL  $model
                       / .\\\`     CPU    $cpu
                      /.\\\`       RAM    $ram
                     /\\\`         SHELL  $shell
                                 PKGS   $pkgs
                                 UPTIME $uptime
            " 18 100
        ;;
        "Pop"*) # Pop
            whiptail --title "cfetch" --msgbox "
                                 $user
              ______             OS     $distro
              \\   _ \\        __  KERNEL $kernel
               \\ \\ \\ \\      / /  MODEL  $model
                \\ \\_\\ \\    / /   CPU    $cpu
                 \\  ___\\  /_/    RAM    $ram
                  \\ \\    _       SHELL  $shell
                 __\\_\\__(_)_     PKGS   $pkgs
                (___________)    UPTIME $uptime
            " 18 100

        ;;
        "Pure"*) # Pure
            whiptail --title "cfetch" --msgbox "
                               $user
               _____________   OS     $distro
              |  _________  |  KERNEL $kernel
              | |         | |  MODEL  $model
              | |         | |  CPU    $cpu
              | |_________| |  RAM    $ram
              |_____________|  SHELL  $shell
                               PKGS   $pkgs
                               UPTIME $uptime
            " 18 100

        ;;
        "Raspbian"*) # Raspbian
            whiptail --title "cfetch" --msgbox "
                          $user
                __  __    OS     $distro
               (_\\)(/_)   KERNEL $kernel
               (_(__)_)   MODEL  $model
              (_(_)(_)_)  CPU    $cpu
               (_(__)_)   RAM    $ram
                 (__)     SHELL  $shell
                          PKGS   $pkgs
                          UPTIME $uptime
            " 18 100

        ;;
        "Slackware"*) # Slackware
            whiptail --title "cfetch" --msgbox "
                             $user
                 ________    OS     $distro
                /  ______|   KERNEL $kernel
                | |______    MODEL  $model
                \\______  \\   CPU    $cpu
                 ______| |   RAM    $ram
              | |________/   SHELL  $shell
              |____________  PKGS   $pkgs
                             UPTIME $uptime
            " 18 100

        ;;
        "SUSE"*) # SUSE
            whiptail --title "cfetch" --msgbox "
                             $user
                  _______    OS     $distro
              -___|   __ \\   KERNEL $kernel
                     / .\\ \\  MODEL  $model
                     \\__/ |  CPU    $cpu
                   _______|  RAM    $ram
                   \\_______  SHELL  $shell
              --__________/  PKGS   $pkgs
                             UPTIME $uptime
            " 18 100
        ;;
        "Ubuntu"*) # Ubuntu
            whiptail --title "cfetch" --msgbox "
                       $user
                   _   OS     $distro
               ---(_)  KERNEL $kernel
           _/  ---  \\  MODEL  $model
          (_) |   |    CPU    $cpu
            \\  --- _/  RAM    $ram
               ---(_)  SHELL  $shell
                       PKGS   $pkgs
                       UPTIME $uptime
            " 18 100
        ;;
        "Void"*) # Void
            whiptail --title "cfetch" --msgbox "
                               $user
                  _______      OS     $distro
                  \\_____ \\\`-   KERNEL $kernel
               /\\   ___ \\\`- \\  MODEL  $model
              | |  /   \\  | |  CPU    $cpu
              | |  \\___/  | |  RAM    $ram
               \\ \\\`-_____  \\/  SHELL  $shell
                \\\`-______\\     PKGS   $pkgs
                               UPTIME $uptime
            " 18 100
        ;;
        "Voyager"*) # Voyager
            whiptail --title "cfetch" --msgbox "
                              $user
               _____   ____   OS     $distro
              |     | |    |  KERNEL $kernel
              |     | |    |  MODEL  $model
              |     | |    |  CPU    $cpu
              |     | |____|  RAM    $ram
              |     | _____   SHELL  $shell
              |     ||     |  PKGS   $pkgs
              |_____||_____|  UPTIME $uptime
            " 18 100
        ;;
        *) # Others
            whiptail --title "cfetch" --msgbox "
                          $user
                  ___     OS     $distro
                 (.. |    KERNEL $kernel
                 (<> |    MODEL  $model
                / __  \\   CPU    $cpu
               ( /  \\ /|  RAM    $ram
              _/\\ __)/_)  SHELL  $shell
              \\|/-___\\|/  PKGS   $pkgs
                          UPTIME $uptime
            " 18 100
        ;;
    esac
}


main() {
    # If there is argument, the assigned cases will be executed. If the
    # argument does not match on the cases, then system information will be
    # displayed.
    while [[ $# -gt 0 ]] && [[ $1 == "--"* ]];
    do
        option=$1;
        shift;
        case $option in
            "--version")
                whiptail --title "cfetch" --msgbox "cfetch version 0.1.3" 10 50;;
            "--help") usage;;
            *) fetch;;
        esac
    done

    if [[ $option != "--"* ]]; then
        fetch
    fi
}

main $@
